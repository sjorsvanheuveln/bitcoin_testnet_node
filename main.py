#!/usr/bin/env python3

'''
Little Bitcoin Testnet Node project to write my first transaction (+more).
Author: Sjors van Heuveln 03-11-2021
'''

####################################
from examples import *
from helpers import *
from network import *
from config import *
from script import *

#basic_node_action(TESTNET_HOST2)
#send_transaction()
#getMempool(TESTNET_HOST2)
#bloomfilter()
#send_ascii_tx(bytes('wzup bitcoiners', 'ascii'), testnet=True)
#art_from_chain('d8ca2c1cc697c4125d2bd5bcbaa5c3a6a54e32752d29ccb0244ed7ce24bdcbaf', testnet=False)
#art_from_chain('a9ef5d93aa87b8bc065055b9b5e9e116b92f77974c95ac51bbf9d9e4a9f5b77c', testnet=True) #saylor

#send_simple_tx(RETURN_COIN_FAUCET_ADDRESS)
####################################

#message = bytes.fromhex('4040404040404040404040404040404040404040405152716a6f45445140404040404040404040400a40404040404040404040404040404040404025372720603b6a52552a4c414b6d44404040404040400a404040404040404040404040404040405872205f636b587a60602020272a665e2a212b6f514040400a4040404040404040404040404040423c605e5921272020202020202020203b585e4a692b254040400a404040404040404040404040403860213f5121606060696a6b55556d7327607a37275f6a514040400a404040404040404040404040406a3c2a59642e6060384040404040404040733b4a4a5e40405258400a404040404040404040404040402f4c7921547e207d404040404040404040407e51595140405738400a404040404040404040404040403e697c51777e6051404040404040404040516367714040404040400a40404040404040404040404040205e75517a607a40404040404040404040592663404040404040400a40404040404040404040404058202c3b4c7e206840255e60605e2f535740274160545152674e55400a4040404040404040404040407c5f60217e202075446021794c753b202020604e3b20273c7a7940400a404040404040404040404040697c206020207340782a3e6020272e20202053405820603b794440400a4040404040404040404040405220207e605e404040404051524e6b4b40524e4040264051404040400a4040404040404040404040406720274e3a71404040404040404040405151404040404051404040400a404040404040404040404040402c752c3b214040404040404040263a3740442b45514051405240400a40404040404040404040404040517c2c20374040404040406a2b20203b2c2c5f21697121402140400a4040404040404040404040404040407c60695140404040263d213a2c20206021696b517a407851400a4040404040404040404040404040406f4b6d40404040512c4e793b2c20605f2b72375376405140400a4040404040404040404040404040406145544051404058604e3827202e696a6d58456660574040400a404040404040404040404040404040675325277e3b693b37457c2020205f3a27603a6f447a4040400a4040404040404040404040404040404051407a20606269274545717e20203b6951413c55574040400a404040404040404040404040404040406752513b7e202c2a66556a51693c6a797d516b40404040400a404040404040404040404040424b5140516b2638687a3a2060214251516d672551415540404040400a40404040404040404040253b2020202c6e51514058524b7d4c7d694e4e446f7a78404040404040400a4040404040404040717e20202020202020203d5240516d695a5862514040404040404040404040400a4040404040407d27202020202020202020202020274c4b516d6a36514040404040404040404040400a404040442b20202020202020202020202020202020202060214a4e5140404051407a7140404040400a40407e20202020202020202020202020202020202020202020202020272c2c2e602020276f4040400a405920202020202020202020202020202020202020202020202020202020202020202020206077400a5820202020202020202020202020202020202020202020202020202020202020202020202e3a204a0a')
message = bytes('Yo, bitcoiners?! You reading me? ATH incoming!', 'ascii')
send_ascii_tx(bytes(message), testnet=True)


# e = little_endian_to_int(hash256(PASSPHRASE))
# p = PrivateKey(e)
# a = p.point.address(testnet = False)
# print(a)
# msg = bytes("Hello Mainnet!", 'ascii')


# #txin
# tx_in = TxFetcher.max_utxo_fetch(address = a, testnet=False)


# outputs = []
# '''hand shake and get min fee'''
# node = SimpleNode(TESTNET_HOST3, testnet=False, logging=True)
# node.handshake()

# min_fee = node.wait_for(FeefilterMessage).fee
# if min_fee < 100:
#     min_fee = 250
#     print('reset fee to:', min_fee)

# #opreturn output
# payload_amount = 0
# payload_script = secret_script(msg)
# outputs.append(TxOut(amount=payload_amount, script_pubkey=payload_script))


# #change output
# change_amount = int(tx_in.amount - min_fee)
# change_h160 = p.point.hash160()
# change_script = p2pkh_script(change_h160)
# outputs.append(TxOut(amount=change_amount, script_pubkey=change_script))


# #create transaction, sign and send
# # tx_obj = Tx(1, [tx_in], outputs, locktime = 0, testnet = False)
# # tx_obj.sign_input(0, p)
# # node.send(tx_obj)

# # print('wait for reject msg')
# # reject = node.wait_for(RejectMessage)
# # print(reject)


